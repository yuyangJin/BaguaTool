
test:     file format elf64-x86-64


Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 05                	je     4003dd <_init+0x15>
  4003d8:	e8 43 00 00 00       	callq  400420 <__libc_start_main@plt+0x10>
  4003dd:	48 83 c4 08          	add    $0x8,%rsp
  4003e1:	c3                   	retq   

Disassembly of section .plt:

00000000004003f0 <printf@plt-0x10>:
  4003f0:	ff 35 12 0c 20 00    	pushq  0x200c12(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003f6:	ff 25 14 0c 20 00    	jmpq   *0x200c14(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400400 <printf@plt>:
  400400:	ff 25 12 0c 20 00    	jmpq   *0x200c12(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400406:	68 00 00 00 00       	pushq  $0x0
  40040b:	e9 e0 ff ff ff       	jmpq   4003f0 <_init+0x28>

0000000000400410 <__libc_start_main@plt>:
  400410:	ff 25 0a 0c 20 00    	jmpq   *0x200c0a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400416:	68 01 00 00 00       	pushq  $0x1
  40041b:	e9 d0 ff ff ff       	jmpq   4003f0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400420 <.plt.got>:
  400420:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400426:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400430 <_start>:
  400430:	31 ed                	xor    %ebp,%ebp
  400432:	49 89 d1             	mov    %rdx,%r9
  400435:	5e                   	pop    %rsi
  400436:	48 89 e2             	mov    %rsp,%rdx
  400439:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40043d:	50                   	push   %rax
  40043e:	54                   	push   %rsp
  40043f:	49 c7 c0 10 07 40 00 	mov    $0x400710,%r8
  400446:	48 c7 c1 a0 06 40 00 	mov    $0x4006a0,%rcx
  40044d:	48 c7 c7 5f 06 40 00 	mov    $0x40065f,%rdi
  400454:	e8 b7 ff ff ff       	callq  400410 <__libc_start_main@plt>
  400459:	f4                   	hlt    
  40045a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400460 <deregister_tm_clones>:
  400460:	b8 3f 10 60 00       	mov    $0x60103f,%eax
  400465:	55                   	push   %rbp
  400466:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  40046c:	48 83 f8 0e          	cmp    $0xe,%rax
  400470:	48 89 e5             	mov    %rsp,%rbp
  400473:	76 1b                	jbe    400490 <deregister_tm_clones+0x30>
  400475:	b8 00 00 00 00       	mov    $0x0,%eax
  40047a:	48 85 c0             	test   %rax,%rax
  40047d:	74 11                	je     400490 <deregister_tm_clones+0x30>
  40047f:	5d                   	pop    %rbp
  400480:	bf 38 10 60 00       	mov    $0x601038,%edi
  400485:	ff e0                	jmpq   *%rax
  400487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40048e:	00 00 
  400490:	5d                   	pop    %rbp
  400491:	c3                   	retq   
  400492:	0f 1f 40 00          	nopl   0x0(%rax)
  400496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40049d:	00 00 00 

00000000004004a0 <register_tm_clones>:
  4004a0:	be 38 10 60 00       	mov    $0x601038,%esi
  4004a5:	55                   	push   %rbp
  4004a6:	48 81 ee 38 10 60 00 	sub    $0x601038,%rsi
  4004ad:	48 c1 fe 03          	sar    $0x3,%rsi
  4004b1:	48 89 e5             	mov    %rsp,%rbp
  4004b4:	48 89 f0             	mov    %rsi,%rax
  4004b7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004bb:	48 01 c6             	add    %rax,%rsi
  4004be:	48 d1 fe             	sar    %rsi
  4004c1:	74 15                	je     4004d8 <register_tm_clones+0x38>
  4004c3:	b8 00 00 00 00       	mov    $0x0,%eax
  4004c8:	48 85 c0             	test   %rax,%rax
  4004cb:	74 0b                	je     4004d8 <register_tm_clones+0x38>
  4004cd:	5d                   	pop    %rbp
  4004ce:	bf 38 10 60 00       	mov    $0x601038,%edi
  4004d3:	ff e0                	jmpq   *%rax
  4004d5:	0f 1f 00             	nopl   (%rax)
  4004d8:	5d                   	pop    %rbp
  4004d9:	c3                   	retq   
  4004da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004e0 <__do_global_dtors_aux>:
  4004e0:	80 3d 59 0b 20 00 00 	cmpb   $0x0,0x200b59(%rip)        # 601040 <completed.7596>
  4004e7:	75 11                	jne    4004fa <__do_global_dtors_aux+0x1a>
  4004e9:	55                   	push   %rbp
  4004ea:	48 89 e5             	mov    %rsp,%rbp
  4004ed:	e8 6e ff ff ff       	callq  400460 <deregister_tm_clones>
  4004f2:	5d                   	pop    %rbp
  4004f3:	c6 05 46 0b 20 00 01 	movb   $0x1,0x200b46(%rip)        # 601040 <completed.7596>
  4004fa:	f3 c3                	repz retq 
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <frame_dummy>:
  400500:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400505:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400509:	75 05                	jne    400510 <frame_dummy+0x10>
  40050b:	eb 93                	jmp    4004a0 <register_tm_clones>
  40050d:	0f 1f 00             	nopl   (%rax)
  400510:	b8 00 00 00 00       	mov    $0x0,%eax
  400515:	48 85 c0             	test   %rax,%rax
  400518:	74 f1                	je     40050b <frame_dummy+0xb>
  40051a:	55                   	push   %rbp
  40051b:	48 89 e5             	mov    %rsp,%rbp
  40051e:	ff d0                	callq  *%rax
  400520:	5d                   	pop    %rbp
  400521:	e9 7a ff ff ff       	jmpq   4004a0 <register_tm_clones>

0000000000400526 <_Z5printi>:

double A[1000][1000] = {0};
double B[1000] = {0};
double C[1000] = {0};

int print(int counter){
  400526:	55                   	push   %rbp
  400527:	48 89 e5             	mov    %rsp,%rbp
  40052a:	48 83 ec 10          	sub    $0x10,%rsp
  40052e:	89 7d fc             	mov    %edi,-0x4(%rbp)
  printf("counter = %d\n",counter);
  400531:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400534:	89 c6                	mov    %eax,%esi
  400536:	bf 28 07 40 00       	mov    $0x400728,%edi
  40053b:	b8 00 00 00 00       	mov    $0x0,%eax
  400540:	e8 bb fe ff ff       	callq  400400 <printf@plt>
}
  400545:	90                   	nop
  400546:	c9                   	leaveq 
  400547:	c3                   	retq   

0000000000400548 <_Z3bari>:

int bar(int j){
  400548:	55                   	push   %rbp
  400549:	48 89 e5             	mov    %rsp,%rbp
  40054c:	89 7d ec             	mov    %edi,-0x14(%rbp)
  double x, y = 0;
  40054f:	66 0f ef c0          	pxor   %xmm0,%xmm0
  400553:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  x = j + 2.4;
  400558:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40055c:	f2 0f 2a 45 ec       	cvtsi2sdl -0x14(%rbp),%xmm0
  400561:	f2 0f 10 0d cf 01 00 	movsd  0x1cf(%rip),%xmm1        # 400738 <_IO_stdin_used+0x18>
  400568:	00 
  400569:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  40056d:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  y = j / 3.7;
  400572:	66 0f ef c0          	pxor   %xmm0,%xmm0
  400576:	f2 0f 2a 45 ec       	cvtsi2sdl -0x14(%rbp),%xmm0
  40057b:	f2 0f 10 0d bd 01 00 	movsd  0x1bd(%rip),%xmm1        # 400740 <_IO_stdin_used+0x20>
  400582:	00 
  400583:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  400587:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
  A[j][j] = x - y;
  40058c:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  400591:	f2 0f 5c 45 f0       	subsd  -0x10(%rbp),%xmm0
  400596:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400599:	48 98                	cltq   
  40059b:	48 69 c0 48 1f 00 00 	imul   $0x1f48,%rax,%rax
  4005a2:	48 05 60 10 60 00    	add    $0x601060,%rax
  4005a8:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  B[j] = y * x;
  4005ac:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  4005b1:	f2 0f 59 45 f8       	mulsd  -0x8(%rbp),%xmm0
  4005b6:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005b9:	48 98                	cltq   
  4005bb:	f2 0f 11 04 c5 60 22 	movsd  %xmm0,0xda2260(,%rax,8)
  4005c2:	da 00 

  return A[j][j]+B[j];
  4005c4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005c7:	48 98                	cltq   
  4005c9:	48 69 c0 48 1f 00 00 	imul   $0x1f48,%rax,%rax
  4005d0:	48 05 60 10 60 00    	add    $0x601060,%rax
  4005d6:	f2 0f 10 08          	movsd  (%rax),%xmm1
  4005da:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005dd:	48 98                	cltq   
  4005df:	f2 0f 10 04 c5 60 22 	movsd  0xda2260(,%rax,8),%xmm0
  4005e6:	da 00 
  4005e8:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  4005ec:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
}
  4005f0:	5d                   	pop    %rbp
  4005f1:	c3                   	retq   

00000000004005f2 <_Z3fooi>:

int foo(int i){
  4005f2:	55                   	push   %rbp
  4005f3:	48 89 e5             	mov    %rsp,%rbp
  4005f6:	48 83 ec 18          	sub    $0x18,%rsp
  4005fa:	89 7d ec             	mov    %edi,-0x14(%rbp)
  int sum = 0;
  4005fd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  //double x = 0;
  for (int j = i; j < i; i++){
  400604:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400607:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40060a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40060d:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  400610:	7d 48                	jge    40065a <_Z3fooi+0x68>
    sum += bar(j);
  400612:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400615:	89 c7                	mov    %eax,%edi
  400617:	e8 2c ff ff ff       	callq  400548 <_Z3bari>
  40061c:	01 45 f8             	add    %eax,-0x8(%rbp)
    C[j] += sum * 1.4;
  40061f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400622:	48 98                	cltq   
  400624:	f2 0f 10 0c c5 a0 41 	movsd  0xda41a0(,%rax,8),%xmm1
  40062b:	da 00 
  40062d:	66 0f ef c0          	pxor   %xmm0,%xmm0
  400631:	f2 0f 2a 45 f8       	cvtsi2sdl -0x8(%rbp),%xmm0
  400636:	f2 0f 10 15 0a 01 00 	movsd  0x10a(%rip),%xmm2        # 400748 <_IO_stdin_used+0x28>
  40063d:	00 
  40063e:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
  400642:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  400646:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400649:	48 98                	cltq   
  40064b:	f2 0f 11 04 c5 a0 41 	movsd  %xmm0,0xda41a0(,%rax,8)
  400652:	da 00 
}

int foo(int i){
  int sum = 0;
  //double x = 0;
  for (int j = i; j < i; i++){
  400654:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  400658:	eb b0                	jmp    40060a <_Z3fooi+0x18>
    sum += bar(j);
    C[j] += sum * 1.4;
  }
  //printf("foo sum = %d",sum);
  return sum;
  40065a:	8b 45 f8             	mov    -0x8(%rbp),%eax
}
  40065d:	c9                   	leaveq 
  40065e:	c3                   	retq   

000000000040065f <main>:

int main(){
  40065f:	55                   	push   %rbp
  400660:	48 89 e5             	mov    %rsp,%rbp
  400663:	48 83 ec 10          	sub    $0x10,%rsp
  int sum = 0;
  400667:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  for(int i = 0; i < 100000; i++){
  40066e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400675:	81 7d fc 9f 86 01 00 	cmpl   $0x1869f,-0x4(%rbp)
  40067c:	7f 13                	jg     400691 <main+0x32>
    sum += foo(i);
  40067e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400681:	89 c7                	mov    %eax,%edi
  400683:	e8 6a ff ff ff       	callq  4005f2 <_Z3fooi>
  400688:	01 45 f8             	add    %eax,-0x8(%rbp)
  return sum;
}

int main(){
  int sum = 0;
  for(int i = 0; i < 100000; i++){
  40068b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40068f:	eb e4                	jmp    400675 <main+0x16>
    sum += foo(i);
  }
  //print(sum);
  400691:	b8 00 00 00 00       	mov    $0x0,%eax
  400696:	c9                   	leaveq 
  400697:	c3                   	retq   
  400698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40069f:	00 

00000000004006a0 <__libc_csu_init>:
  4006a0:	41 57                	push   %r15
  4006a2:	41 56                	push   %r14
  4006a4:	41 89 ff             	mov    %edi,%r15d
  4006a7:	41 55                	push   %r13
  4006a9:	41 54                	push   %r12
  4006ab:	4c 8d 25 5e 07 20 00 	lea    0x20075e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4006b2:	55                   	push   %rbp
  4006b3:	48 8d 2d 5e 07 20 00 	lea    0x20075e(%rip),%rbp        # 600e18 <__init_array_end>
  4006ba:	53                   	push   %rbx
  4006bb:	49 89 f6             	mov    %rsi,%r14
  4006be:	49 89 d5             	mov    %rdx,%r13
  4006c1:	4c 29 e5             	sub    %r12,%rbp
  4006c4:	48 83 ec 08          	sub    $0x8,%rsp
  4006c8:	48 c1 fd 03          	sar    $0x3,%rbp
  4006cc:	e8 f7 fc ff ff       	callq  4003c8 <_init>
  4006d1:	48 85 ed             	test   %rbp,%rbp
  4006d4:	74 20                	je     4006f6 <__libc_csu_init+0x56>
  4006d6:	31 db                	xor    %ebx,%ebx
  4006d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006df:	00 
  4006e0:	4c 89 ea             	mov    %r13,%rdx
  4006e3:	4c 89 f6             	mov    %r14,%rsi
  4006e6:	44 89 ff             	mov    %r15d,%edi
  4006e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006ed:	48 83 c3 01          	add    $0x1,%rbx
  4006f1:	48 39 eb             	cmp    %rbp,%rbx
  4006f4:	75 ea                	jne    4006e0 <__libc_csu_init+0x40>
  4006f6:	48 83 c4 08          	add    $0x8,%rsp
  4006fa:	5b                   	pop    %rbx
  4006fb:	5d                   	pop    %rbp
  4006fc:	41 5c                	pop    %r12
  4006fe:	41 5d                	pop    %r13
  400700:	41 5e                	pop    %r14
  400702:	41 5f                	pop    %r15
  400704:	c3                   	retq   
  400705:	90                   	nop
  400706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40070d:	00 00 00 

0000000000400710 <__libc_csu_fini>:
  400710:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400714 <_fini>:
  400714:	48 83 ec 08          	sub    $0x8,%rsp
  400718:	48 83 c4 08          	add    $0x8,%rsp
  40071c:	c3                   	retq   
